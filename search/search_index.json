{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Documenta\u00e7\u00e3o de Projeto Data Quality","text":"<p>Documenta\u00e7\u00e3o produzida utilizando o MkDocs, se deseja saber mais acesse mkdocs.org.</p>"},{"location":"#contrato-de-schema","title":"Contrato de Schema","text":"<p>             Bases: <code>BaseModel</code></p> <p>Modelo de dados para Vendas</p> <p>Parameters:</p> Name Type Description Default <code>email</code> <code>str</code> <p>Email do comprador</p> required <code>data</code> <code>datetime</code> <p>Data da Compra</p> required <code>id_compra</code> <code>int</code> <p>Identificador da Compra</p> required <code>valor_compra</code> <code>float</code> <p>Valor da Compra</p> required <code>vendedor</code> <code>str</code> <p>Vendedor que realizou a compra</p> required Source code in <code>src/contrato.py</code> <pre><code>class Vendas(BaseModel):\n    \"\"\"\n    Modelo de dados para Vendas\n\n    Args:\n        email (str): Email do comprador\n        data (datetime): Data da Compra\n        id_compra (int): Identificador da Compra\n        valor_compra (float): Valor da Compra\n        vendedor (str): Vendedor que realizou a compra\n\n    \"\"\"\n    email: EmailStr\n    data: datetime\n    id_compra: PositiveInt\n    valor_compra: PositiveFloat\n    vendedor: VendedoresEnum\n\n    @field_validator('vendedor')\n    def vendedor_deve_estar_enum(cls, error):\n        return error\n</code></pre>"}]}